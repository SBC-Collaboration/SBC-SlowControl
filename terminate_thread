#https://stackoverflow.com/questions/49663124/cause-python-to-exit-if-any-thread-has-an-exception/49665590

import threading
import sys
import traceback
import os
import signal
import time
from PySide2 import QtCore,QtWidgets

class MainClass(QtCore.QObject):
    def __init__(self, parent=None):
        super().__init__(parent)
        print('MainClass')
        App.aboutToQuit.connect(self.stopprogram)
        self.startprogram()

    def startprogram(self):
        self.Mythread = QtCore.QThread()
        self.Myclass = myclass(string = 'thisisashorttest')
        self.Myclass.moveToThread(self.Mythread)
        self.Mythread.started.connect(self.Myclass.run())
        self.Mythread.start()

        time.sleep(0.5)
        self.Mythread2 = QtCore.QThread()
        self.Myclass2 = myclass(string = 'THISISALONGTEST')
        self.Myclass2.moveToThread(self.Mythread2)
        self.Mythread2.started.connect(self.Myclass2.run())
        self.Mythread2.start()

    @QtCore.Slot()
    def stopprogram(self):
        self.Myclass.stop()
        self.Mythread.quit()
        self.Mythread.wait()

        self.Myclass2.stop()
        self.Mythread2.quit()
        self.Mythread2.wait()


class myclass(QtCore.QObject):
    def __init__(self,string = None, parent = None):
        super().__init__(parent)
        self.string = string
    @QtCore.Slot()
    def run(self):
        self.Running = True
        while self.Running:
            print(self.string[0])
            self.string = self.string[1:]
            time.sleep(1)

    def stop(self):
        return 0

def sendKillSignal(etype, value, tb):
    print('KILL ALL')
    traceback.print_exception(etype, value, tb)
    os.kill(os.getpid(), signal.SIGKILL)


original_init = QtCore.QThread.__init__
def patched_init(self, *args, **kwargs):
    print("thread init'ed")
    original_init(self, *args, **kwargs)
    original_run = self.run
    def patched_run(*args, **kw):
        try:
            original_run(*args, **kw)
        except:
            sys.excepthook(*sys.exc_info())
    self.run = patched_run



def install():
    sys.excepthook = sendKillSignal
    QtCore.QThread.__init__ = patched_init

install()




if __name__ == '__main__':
    App = QtWidgets.QApplication(sys.argv)

    MC = MainClass()
    sys.exit(App.exec_())